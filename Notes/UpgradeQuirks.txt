=== 1.54 ===

- `panic` macro, pointing it at a `pub macro` in `pub mod panic`
- `#[macro_export] macro` (slightly different rules to `macro_rules!` version)
- new `asm` macro
- `pub use bool` to import the primitive type, not a module
- Trait aliases
- Or patterns
  > Hard question between having combinatorial explosion from expanding or patterns early (in HIR generation), or serious changes in destructuring logic.
- Extended use of const generics
  - Now need value inferrence
  - Used in array initialisation
- New language-provided trait impls
- Lots of new `const fn` constructs
- Updated `?` operator
- Use of `!` as a type more (`e.into()` where `E: Into<!>`)
- Right-exclusive range patterns
- Destructuring assignment added (used in `liballoc`)
- `#[cfg]` on function arguments
- Custom receivers (Pin) used with inherent impls
- More advanced use of closures locally (broke usage logic)
- atomic pointer ops
- `alloc_error_handler`
- `Box<T>` now has an allocator param
- `cfg(feature="foo")` in Cargo.toml target dependencies
- `$crate` within nested macro (macro defined by a macro)
- `#[rustc_legacy_const_generics]`
- Exporting of macro-defined macros (interpolated expressions)
- `self.foo()` where `Self` implements two traits wtih a `foo` method, one of which is the current impl
- Nested macro expansion edition hygiene
- Variables in constants/statics